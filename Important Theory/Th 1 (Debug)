Debug :
Debugging is an essential part of software development, which involves identifying, analyzing, and fixing errors or bugs in a program.
Bugs are often logical errors, syntax errors, or runtime errors that prevent a program from executing correctly.
Debugging is the process of locating these issues and resolving them to ensure that the program behaves as expected.

What Debug Means ? Identify Bugs , Analyzing Errors , Fixing Bugs , Verifying Fixes. 

1. Using Debugger Tools
Modern  (IDEs) like Visual Studio, IntelliJ IDEA, Eclipse, and others come with built-in debugger tools.
  -> using Breakpoints
  -> Step Over/Into/Out
  -> Variable Inspection
  -> Call Stack Analysis
2. Logging and Print Statements
3. Unit Testing
4. Static Code Analysis : Static analysis tools analyze your code for potential errors without executing it. 
      e.g-  Clang Static Analyzer , SonarQube
5. Code Reviews


# Memory Allocation using Malloc and New : 

  1. int* ptr = (int*)malloc(sizeof(int)); // for single valriable
     *ptr = 42

     int* ptr = new int; // Using new Allocating memory to variable
     *ptr = 42;

  2. int* arr = new int[5];   

     int size = 5; // Size of the array
     int* arr = (int*)malloc(size * sizeof(int));

3.   int rows = 3, cols = 4;

    int** matrix = new int*[rows];

    for (int i = 0; i < rows; ++i) {
        matrix[i] = new int[cols];
    }


    int rows = 3; // Number of rows
    int cols = 4; // Number of columns

    int** matrix = (int**)malloc(rows * sizeof(int*));

    for (int i = 0; i < rows; ++i) {
        matrix[i] = (int*)malloc(cols * sizeof(int));
    }


